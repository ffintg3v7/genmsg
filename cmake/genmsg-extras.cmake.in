macro(_add_stuff_common)
endmacro()

macro(_prepend_path ARG_PATH ARG_FILES ARG_OUTPUT_VAR)
  # todo, check for proper path, slasheds, etc
  set(${ARG_OUTPUT_VAR} "")
  foreach(file ${ARG_FILES})
    list(APPEND ${ARG_OUTPUT_VAR} ${ARG_PATH}/${file})
  endforeach()
endmacro()

macro(add_message_files)
  parse_arguments(ARG "PACKAGE;FILES;DIRECTORY" "NOINSTALL;PRIVATE" ${ARGN})  

  if(NOT ARG_PACKAGE)
    set(ARG_PACKAGE ${PROJECT_NAME})
  endif()

  string(REGEX MATCH "^/.*" IS_FULL_PATH ${ARG_DIRECTORY})

  if(IS_FULL_PATH)
    set(DIRECTORY_FULL_PATH ${ARG_DIRECTORY})
  else()
    set(DIRECTORY_FULL_PATH ${CMAKE_CURRENT_SOURCE_DIR}/${ARG_DIRECTORY})
  endif()  

  #todo, hack: handle this elsewhere when fixing the install stuff
  if(NOT ARG_PRIVATE)
    set(${PROJECT_NAME}_MSG_INCLUDE_DIRS ${DIRECTORY_FULL_PATH}
      CACHE INTERNAL "dir containing msgs")
  endif()

  _prepend_path(${DIRECTORY_FULL_PATH} "${ARG_FILES}" FILES_W_PATH)

  list(APPEND ${PROJECT_NAME}_MESSAGE_FILES ${FILES_W_PATH})
  list(APPEND ${PROJECT_NAME}_MESSAGE_FILES_DIRS ${CMAKE_CURRENT_SOURCE_DIR}/${ARG_DIRECTORY})

  if(NOT ARG_NOINSTALL)
    install(FILES ${FILES_W_PATH} DESTINATION share/${PROJECT_NAME}/${ARG_DIRECTORY})
  endif()
endmacro()

macro(add_service_files)
  parse_arguments(ARG "PACKAGE;FILES;DIRECTORY" "NOINSTALL" ${ARGN})  

  if(NOT ARG_PACKAGE)
    set(ARG_PACKAGE ${PROJECT_NAME})
  endif()

  _prepend_path(${CMAKE_CURRENT_SOURCE_DIR}/${ARG_DIRECTORY} "${ARG_FILES}" FILES_W_PATH)

  list(APPEND ${PROJECT_NAME}_SERVICE_FILES ${FILES_W_PATH})

  if(NOT ARG_NOINSTALL)
    install(FILES ${FILES_W_PATH} DESTINATION share/${PROJECT_NAME}$/${ARG_DIRECTORY})
  endif()
endmacro()

macro(generate_messages)
  parse_arguments(ARG "DEPENDENCIES;LANGS" "" ${ARGN})  

  set(ARG_MESSAGES ${${PROJECT_NAME}_MESSAGE_FILES})
  set(ARG_SERVICES ${${PROJECT_NAME}_SERVICE_FILES})
  set(ARG_DEPENDENCIES ${ARG_DEPENDENCIES})

  if(ARG_LANGS)
    set(GEN_LANGS ${ARG_LANGS})
  else()
    set(GEN_LANGS ${CATKIN_GENLANGS})
  endif()

  set(MSG_SEARCH_DIRS "${PROJECT_NAME}:${MESSAGE_FILES_DIR}")
  foreach(dep ${PROJECT_NAME} ${ARG_DEPENDENCIES})
    if(${dep}_FOUND OR ${dep}_SOURCE_DIR)
      foreach(i ${${dep}_MSG_INCLUDE_DIRS})
        list(APPEND MSG_SEARCH_DIRS "${dep}:${i}")
      endforeach()
    else()
      message(FATAL_ERROR "Messages depends on unknown pkg: ${dep} (Missing find_package(${dep}?)")
    endif()
  endforeach()

  em_expand(@PKG_CMAKE_SRC_DIR@/pkg-genmsg.context.in
    ${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}-genmsg-context.py
    @PKG_CMAKE_SRC_DIR@/pkg-genmsg.cmake.em
    ${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}-genmsg.cmake
    )

endmacro()
